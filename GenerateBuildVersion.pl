#!/usr/bin/perl

open (OUTPUT, ">version.c") || warn "*****WARNING : Could not open version.c for writing\n";

print OUTPUT "//******************************************************************************\n";
print OUTPUT "//******************************************************************************\n";
print OUTPUT "//\n";
print OUTPUT "// FILE:        version.c\n";
print OUTPUT "//\n";
print OUTPUT "// CLASSES:\n";
print OUTPUT "//\n";
print OUTPUT "// DESCRIPTION: Function used to return the reconn version to the caller.";
print OUTPUT "//\n";
print OUTPUT "//******************************************************************************\n";
print OUTPUT "//\n";
print OUTPUT "//                       CONFIDENTIALITY NOTICE:\n";
print OUTPUT "//\n";
print OUTPUT "// THIS FILE CONTAINS MATERIAL THAT IS \"HARRIS PROPRIETARY INFORMATION\"  ANY \n";
print OUTPUT "// REVIEW, RELIANCE, DISTRIBUTION, DISCLOSURE, OR FORWARDING WITHOUT EXPRESSED \n";
print OUTPUT "// PERMISSION IS STRICTLY PROHIBITED.  PLEASE BE SURE TO PROPERLY DISPOSE ANY \n";
print OUTPUT "// HARDCOPIES OF THIS DOCUMENT.\n";
print OUTPUT "//\n";
print OUTPUT "//******************************************************************************\n";
print OUTPUT "//\n";
print OUTPUT "// Government Use Rights:\n";
print OUTPUT "//\n";
print OUTPUT "//           (Applicable only for source code delivered under U. S.\n";
print OUTPUT "//           Government contracts)\n";
print OUTPUT "//\n";
print OUTPUT "//                           RESTRICTED RIGHTS LEGEND\n";
print OUTPUT "//           Use, duplication, or disclosure is subject to restrictions\n";
print OUTPUT "//           stated in the Government's contract with Harris Corporation,\n";
print OUTPUT "//           RF Communications Division. The applicable contract number is\n";
print OUTPUT "//           indicated on the media containing this software. As a minimum,\n";
print OUTPUT "//           the Government has restricted rights in the software as\n";
print OUTPUT "//           defined in DFARS 252.227-7013.\n";
print OUTPUT "//\n";
print OUTPUT "// Commercial Use Rights:\n";
print OUTPUT "//\n";
print OUTPUT "//           (Applicable only for source code procured under contracts other\n";
print OUTPUT "//           than with the U. S. Government)\n";
print OUTPUT "//\n";
print OUTPUT "//                           TRADE SECRET\n";
print OUTPUT "//           Contains proprietary information of Harris Corporation.\n";
print OUTPUT "//\n";
print OUTPUT "// Copyright:\n";
print OUTPUT "//           Protected as an unpublished copyright work,\n";
print OUTPUT "//                    (c) Harris Corporation\n";
print OUTPUT "//           First fixed in 2004, all rights reserved.\n";
print OUTPUT "//\n";
print OUTPUT "//******************************************************************************\n";
print OUTPUT "//\n";
print OUTPUT "// HISTORY: Created <MM>/<DD>/<YYYY> by <USER>\n";
print OUTPUT "// \$Header:\$\n";
print OUTPUT "// \$Revision: 1.3 \$\n";
print OUTPUT "// \$Log:\$\n";
print OUTPUT "// \n";
print OUTPUT "//******************************************************************************\n";
print OUTPUT "//******************************************************************************\n";


print OUTPUT "//This file is auto generated when the reconn application is built. Do not edit this file";
print OUTPUT "// directly. Modify GenerateBuildVersion.pl instead.\n\n";
print OUTPUT "#include <stdio.h>\n";
print OUTPUT "#include <string.h>\n";
print OUTPUT "#include \"version.h\"\n";

$BuildTime = localtime(time);

print OUTPUT "static char gReconnSwVersionString[RECONN_STRING_MAX];\n";
print OUTPUT "static char gReconnVersionBuildDate[] = \"$BuildTime\";\n";
print OUTPUT "static char gKernelVersionString[KERNEL_STRING_MAX];\n\n\n\n";
print OUTPUT "char *getKernelSwVersion()\n";
print OUTPUT "{\n";
print OUTPUT "    FILE *filePtr;\n";
print OUTPUT "    popen(\"uname -a > /temp/linuxVersion\" , \"w\");\n";
print OUTPUT "    filePtr = popen(\"/temp/linuxVersion\", \"r\");\n";
print OUTPUT "    fgets((char*)&gKernelVersionString, KERNEL_STRING_MAX, filePtr);\n";
print OUTPUT "    return ((char*)&gKernelVersionString);\n";
print OUTPUT "};\n\n\n\n";



print OUTPUT "char *getReconnSwVersion()\n";
print OUTPUT "{\n";

print OUTPUT "    memset(&gReconnSwVersionString, 0, RECONN_STRING_MAX);\n";
print OUTPUT "    strcat((char *)&gReconnSwVersionString, majorLevel);\n";
print OUTPUT "    strcat((char *)&gReconnSwVersionString, \".\");\n";
print OUTPUT "    strcat((char *)&gReconnSwVersionString, minorLevel);\n";
print OUTPUT "    strcat((char *)&gReconnSwVersionString, \".\");\n";
print OUTPUT "    strcat((char *)&gReconnSwVersionString, patchLevel);\n";
print OUTPUT "    strcat((char *)&gReconnSwVersionString, \" \");\n";
print OUTPUT "    strcat((char *)&gReconnSwVersionString, gReconnVersionBuildDate);\n";
print OUTPUT "    return ((char*)&gReconnSwVersionString);\n";
print OUTPUT "};\n";

